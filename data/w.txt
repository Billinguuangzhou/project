See discussions, stats, and author profiles for this publication at: https://www.researchgate.net/publication/308038880

parallelnewhybrid : an R package for the parallelization of hybrid detection
using NEWHYBRIDS

Article  in  Molecular Ecology Resources · September 2016

DOI: 10.1111/1755-0998.12597

CITATIONS
11

5 authors, including:

Brendan F Wringe
Fisheries and Oceans Canada

54 PUBLICATIONS   192 CITATIONS   

SEE PROFILE

Nicholas W. Jeffery
Bedford Institute of Oceanography

44 PUBLICATIONS   290 CITATIONS   

SEE PROFILE

Some of the authors of this publication are also working on these related projects:

Evolutionary history of parasites and their vectors View project

Pedigree inference View project

READS
632

Ryan R.E. Stanley
Fisheries and Oceans Canada

42 PUBLICATIONS   193 CITATIONS   

SEE PROFILE

Eric C Anderson
Southwest Fisheries Science Center

91 PUBLICATIONS   2,901 CITATIONS   

SEE PROFILE

All content following this page was uploaded by Ian Bradbury on 27 September 2017.

The user has requested enhancement of the downloaded file.

Molecular Ecology Resources (2016)

doi: 10.1111/1755-0998.12597

S P E C I A L I S S U E : P O P U L A T I O N G E N O M I C S I N R

parallelnewhybrid: an R package for the parallelization of
hybrid detection using NEWHYBRIDS

BRENDAN F. WRINGE,* RYAN R. E. STANLEY,* NICHOLAS W. JEFFERY,* ERIC C. ANDERSON† and
I A N R . B R A D B U R Y *
*Fisheries and Oceans Canada, Salmonids Section, 80 East White Hills Road, St. John’s Newfoundland and Labrador, Canada A1C
5X1, †Fisheries Ecology Division, National Oceanic and Atmospheric Administration Southwest Fisheries Science Center, Santa
Cruz, CA 95060, USA

Abstract

Hybridization among populations and species is a central theme in many areas of biology, and the study of
hybridization has direct applicability to testing hypotheses about evolution, speciation and genetic recombination,
as well as having conservation, legal and regulatory implications. Yet, despite being a topic of considerable interest,
the identiﬁcation of hybrid individuals, and quantiﬁcation of the (un)certainty surrounding the identiﬁcations,
remains difﬁcult. Unlike other programs that exist to identify hybrids based on genotypic information, NEWHYBRIDS is
able to assign individuals to speciﬁc hybrid classes (e.g. F
2) because it makes use of patterns of gene inheritance
within each locus, rather than just the proportions of gene inheritance within each individual. For each comparison
and set of markers, multiple independent runs of each data set should be used to develop an estimate of the hybrid
class assignment accuracy. The necessity of analysing multiple simulated data sets, constructed from large genome-
wide data sets, presents signiﬁcant computational challenges. To address these challenges, we present parallel-
newhybrid, an R package designed to decrease user burden when undertaking multiple NEWHYBRIDS analyses.
parallelnewhybrid does so by taking advantage of the parallel computational capabilities inherent in modern com-
puters to efﬁciently and automatically execute separate NEWHYBRIDS runs in parallel. We show that parallelization of
analyses using this package affords users several-fold reductions in time over a traditional serial analysis. parallel-
newhybrid consists of an example data set, a README and three operating system-speciﬁc functions to execute parallel
NEWHYBRIDS analyses on each of a computer’s c cores. parallelnewhybrid is freely available on the long-term software
hosting site GITHUB (www.github.com/bwringe/parallelnewhybrid).

1, F

Keywords: hybrid, introgression, NEWHYBRIDS, population genomics, population structure, R, software

Received 5 May 2016; revision received 29 August 2016; accepted 6 September 2016

Introduction

Hybridization among closely related species, and geneti-
cally distinct populations of the same species, is a topic
of broad interest to many ﬁelds of biology (Abbott et al.
2013; Warschefsky et al. 2014; Todesco et al. 2016). Natu-
ral hybrid zones, areas in which genetically distinct pop-
ulations come into contact, and interbreed, are widely
known and studied, especially in terms of hybridiza-
tion’s impact on speciation and evolution (Barton &
Hewitt 1985; Hilbish et al. 2012; Benson et al. 2014).
Hybridization can slow or reverse speciation by allowing
gene ﬂow and recombination, but it can also increase the
rate at which speciation occurs through adaptive intro-
gression, and can even lead to the near instantaneous

Correspondence: Brendan F. Wringe, Fax: +1-709-772-4188;
E-mail: bwringe@gmail.com

© 2016 John Wiley & Sons Ltd

creation of novel
species via allopolyploidization
[(Abbott et al. 2013) but see (Barton 2013)]. The study of
hybridization can also have conservation and legal and
policy implications as it relates to the genetic structure
and integrity of populations (Benson et al. 2014; Fitz-
patrick et al. 2015), or introgression of domesticated
(Kidd et al. 2009) or transgenic (Warwick et al. 2003) alle-
les into wild populations. However, despite the impor-
tance of understanding the dynamics of hybridization,
the identiﬁcation of hybrids themselves can be difﬁcult,
and ascertaining to which hybrid class (e.g. F1, F2, back-
cross) an individual belongs is more so.

Intuitively and of salience, the ease and precision
with which hybridized individuals can be identiﬁed
using genetic methods is inversely related to the degree
of (genetic) relatedness between the groups which are
(suspected of) hybridizing (Vaha & Primmer 2006).

2 B . F . W R I N G E E T A L .

to population 1, backcross

However, in many cases, the degree of genetic differen-
tiation among groups (e.g. within or among species)
may be low, limiting the ability to evaluate hybridiza-
tion and introgression within and among species. The
identiﬁcation of hybrids and the ability to determine
the presence, types and numbers of individuals of dif-
ferent hybrid classes can provide crucial
information
on the presence, magnitude and timescale over which
introgression is occurring. While several
statistical
approaches [reviewed by (Anderson 2009; Payseur &
Rieseberg 2016)] and software programs exist
[e.g.
STRUCTURE (Hubisz et al. 2009); NEWHYBRIDS (Anderson &
Thompson 2002); BAYESASS (Wilson & Rannala 2003);
GENODIVE (Meirmans & Van Tienderen 2004), which uses
the maximum-likelihood method of (Buerkle 2005)] to
identify hybrids, most do not assign to hybrid class,
thus losing potentially important information. NEWHY-
BRIDS (Anderson & Thompson 2002) is unique in this
respect, in the discreteness of individual assignment to
speciﬁc hybrid classes it provides. This is done through
evaluation of
the Bayesian posterior probability of
membership in each of six genotype frequency classes
[i.e. pure population 1, pure population 2, F1, F2, back-
cross
to population 2
(Anderson & Thompson 2002)], for each individual,
computed using Markov chain Monte Carlo (MCMC;
Anderson & Thompson 2002). In addition, NEWHYBRIDS
does not require that the allele frequencies of the two
populations be known a priori, and as such, pure sam-
ples of the two populations need not be available to
identify hybrids. This is advantageous for identifying
escapees from domesticated populations without pre-
impact, baseline samples from the wild populations or
in situations where the domesticated animals are
derived from a local wild population. However, (as
with most methods) the accuracy of NEWHYBRIDS to cor-
rectly differentiate hybrid class is highly dependent
upon the number of
informative markers provided,
and the genetic distinctness of the two populations in
question (Anderson & Thompson 2002; Vaha & Prim-
mer 2006). Consequently, while the large genomewide
data sets produced by next-generation sequencing and
genotyping methods may offer signiﬁcant opportunities
for improved hybrid class identiﬁcation, at the same
time their size and complexity present challenges for
existing software. Ultimately, for each comparison and
set of markers, the accuracy should be tested using the
results of multiple simulated data sets, and multiple
independent runs of each data set to ensure conver-
gence (Anderson 2003) further increasing the computa-
tional demands.

Currently, the speed at which a complete NEWHYBRIDS
analysis can be completed is limited by the fact that each
analysis must be initiated separately and in sequence by

the user (Anderson & Thompson 2002; Anderson 2003).
Since NEWHYBRIDS was published (Anderson & Thompson
2002),
shared-memory multiple-computer processing
unit (CPU/core) chipsets have supplanted single CPU
chips and are present in most consumer computers. If
properly leveraged,
this multi-core architecture can
allow for more time-efﬁcient computing by distributing
tasks among cores, and allowing for parallel processing
(e.g. Besnier & Glover 2013). When compared against
running analyses in series, the beneﬁts of such a parallel
approach would be proportional to the size of the data
set, and thus be a boon for the analysis/use of large,
next-generation sequencing data sets which themselves
offer signiﬁcant advances in hybrid identiﬁcation and
classiﬁcation.

It has been previously shown that scripting not only
allows tasks to be reliably distributed across the available
cores, but can also immediately assign a new job to a free
core as soon as a core has ﬁnished a process (Besnier &
Glover 2013). Although such scripting is invariably more
efﬁcient, specialized knowledge of the computer ﬁle
structure and requisite programming language
is
required. Here, we describe an R (R Development Core
Team 2015) package that takes advantage of the parallel
computational capabilities inherent in modern comput-
ers to efﬁciently and automatically analyse lists of NEWHY-
BRIDS runs in parallel. We emphasize that we are not
multi-threading the NEWHYBRIDS program to take advan-
tage of multiple processors during a single run; any sin-
gle run will still take just as long, but we are automating
the procedure for performing multiple runs of the soft-
ware in parallel. The R computing language already fea-
tures many packages dedicated to the analysis and
presentation of population genetics data (e.g. Goudet
2005; Paradis 2010;
Jombart & Ahmed 2011). Thus,
although the R language is likely to be familiar to many
current and potential users of NEWHYBRIDS, our package is
designed such that it should be readily usable by R
novices.

Materials and methods

Description of the package

Although NEWHYBRIDS does not natively support multi-
threading, it is possible to run independent NEWHYBRIDS
analyses in parallel across all available cores. This pro-
cess can, however, be tedious because NEWHYBRIDS does
not have an option to change the name or location of the
output ﬁles. Accordingly, to run NEWHYBRIDS in parallel,
the user must perform each run in a separate directory
so that the output of one instance of NEWHYBRIDS is not
overwritten by the output of another instance. Doing this
manually
open separate

the user

requires

that

© 2016 John Wiley & Sons Ltd

P A R A L L E L I Z A T I O N O F H Y B R I D D E T E C T I O N I N R 3

command-line terminals (e.g. Microsoft command line,
OS X Terminal) and execute NEWHYBRIDS with a speciﬁc
set of parameters for each analysis folder. The status of
each NEWHYBRIDS run must be individually monitored by
the user, and when each analysis is completed, all the
output ﬁles generated by NEWHYBRIDS must be renamed
and combined for post-processing. Such manual moni-
toring and (re)implementation invariably creates CPU
downtime and thus inefﬁciency because it is difﬁcult for
the user to monitor the NEWHYBRIDS progress due to the
extended duration of the analysis (many hours and
potentially days). Furthermore, manually copying, mov-
ing and renaming ﬁles introduce the potential for human
error.

Our package, parallelnewhybrid, is designed to address
these issues: it implements the parallelization of multiple
NEWHYBRIDS analyses, and also automatically compiles
and renames the outputs of NEWHYBRIDS to reﬂect the ﬁle
names of the data sets that were provided to it. Differ-
ences in computer operating system architecture mean
that the manner in which tasks are distributed in Win-
dows differs from OS X and LINUX. Consequently, in
addition to an example data set, the package parallel-
newhybrid is comprised of three operating system-speciﬁc
functions to implement the parallelization of NEWHYBRIDS:
parallelnh_WIN, parallelnh_OSX and parallelnh_LINUX. A
further consequence of the manner in which paralleliza-
tion is effected by R in Windows is that most paralleliza-
tion packages,
included, do not
function correctly in graphic user interface (GUI) or
embedded environment R sessions. While we have been
successful in utilizing parallelnh_xx in the R GUI programs
RStudio (RStudio Team 2015) and R CONSOLE (R Develop-
ment Core Team 2015) in both OS X (OS X version
10.11.3, MACBOOK PRO, 2.3 GHz Intel Core i7, 16 GB RAM)
and LINUX (Ubuntu version 14.04, Dell Precision Tower
7190, 2X 2.3 GHz Intel Xeon, 32 GB RAM), we have
found running through the terminal to offer better stabil-
ity. As such, we highly recommend that parallelnh_xx be
run in the terminal by default. It may also be necessary
to run R as root or administrator when invoking paral-
lelnh_xx because some antivirus programs and tools may
prevent the manipulation of the NEWHYBRIDS executable
ﬁle.

parallelnewhybrid

Example data set

SimPops_NH.txt is a simulated data set with genotypes at
240 loci for 200 individuals in each of the six genotype
frequency classes (i.e. pure1, pure2, F1, F2, BC1 and BC2;
Anderson & Thompson 2002) and is intended to be anal-
ysed in parallel using parallelnh_xx. The instructions for
the user on how to copy the ﬁle from the R repository to
another folder on the user’s hard drive and to prepare

© 2016 John Wiley & Sons Ltd

the ﬁle for parallel analysis are detailed in the README
(https://github.com/bwringe/parallelnewhybrid).

Quantiﬁcation of improvement in performance

iterations (i.e. sum of burnin and sweeps),

We compared the time required to analyse eight simu-
lated data sets, each comprised of 1200 individuals (200
individuals of each of
the six genotype frequency
classes), genotyped at 240 SNP loci using parallelnh_xx
vs. a single-threaded (serial) implementation. In all cases,
NEWHYBRIDS was run with an initial burn-in of 500 repli-
cates, followed by 1000 sweeps (MCMC terminology of
Anderson & Thompson 2002). While these numbers are
lower than would be typically used in a real analysis,
since time to completion scales linearly with the number
of
the
observed fold change improvements should be invariant
to number of iterations. To implement the serial analysis,
we restricted the multi-threading ability of parallelnh_xx
such that it was limited to iteratively populating a single
core. We acknowledge that this is likely an overestimate
of the single core speed, as the script will invariably be
faster than a human operator in initiating a new run as
each ﬁnishes. We chose to analyse eight ﬁles on CPU
architectures with eight virtual (four physical) cores
(Intel Core i7; Samsung and MACBOOK PRO), while in the
case of the Intel Xeon which has 24 virtual (12 physical)
cores, scripting limited execution to a maximum of eight
cores. We also examined how the time to complete the
eight analyses scaled with the number of (virtual) cores
available (1–8) to illustrate how differences in operating
system and chip architecture inﬂuence the operation of
our parallelization function.

Results and discussion

Not surprisingly, even when the initiation of new runs
was automated, the time to complete the analysis of the
eight ﬁles was much slower without parallelization
(Table 1). However, the relationship between improve-
ment in computational speed and the number of cores
made available was not linear (Table 2). This demon-
strates that the ability to automatically distribute a list of
analyses across multiple CPUs offers quantitative
improvements over the native command-line implemen-
tation of NEWHYBRIDS. While always quicker than running
analyses sequentially, we found that the computational
time did not decrease linearly with the number of cores
implemented in the analyses. This relationship was seen
in each operating system (i.e. Windows, OS X, LINUX),
and on the different CPU architectures (Intel Core i7,
Intel Xeon), and has been reported elsewhere (Besnier &
Glover 2013). Like Besnier & Glover (2013), we suggest
this nonlinearity was not caused by parallelnh_xx, but

4 B . F . W R I N G E E T A L .

instead is a function of how the operating system and
processor deals with the distribution and execution of
computationally intensive processes (i.e. NEWHYBRIDS)
along with (operating system speciﬁc) underlying system
processes. Further, monitoring of system resources dur-
ing each trial indicated that performance was not limited
by the availability of random access memory (RAM),
as additional RAM was always available during each
simulation.

We acknowledge that functionality analogous to that
offered by parallelnewhybrid could be achieved using
scripting languages
(e.g. bash scrip for Unix-like

Table 1 Comparison of the computational times required to
complete the analysis of eight simulated data sets each with
1200 individuals genotyped at 240 loci using NEWHYBRIDS in series
compared to in parallel using parallelnewhybrid using different
operating systems and CPU architectures

Time to
complete
in series
(min)

Time to
complete
in parallel
(min)

Fold
improvement

41.60
72.50

73.36

10.13
22.47

9.93

4.10
3.21

7.62

Computer

MacBook Pro†
Samsung
Windows 10‡
Dell Precision
Tower Ubuntu§

†MacBook Pro, OS X 10.11, 2.3 GHz Intel Core i7 with 16 GB
RAM.
‡Samsung, Windows 10, 2.3 GHz Intel Core i7 with 12 GB
RAM.
§Dell Precision Tower 7190, Ubuntu version 14.04, 2X 2.3 GHz
Intel Xeon with 32 GB RAM.

systems, shell script for Windows). However, we chose
to use the R programming language because we feel it
offers several beneﬁts that can help make the functional-
ity offered by parallelnewhybrid accessible to and utilized
by more people. These include an existing population
genetic user base which may afford most potential users
with greater familiarity and comfort with R than with
scripting languages, as well as the infrastructure present
within the R community for the archival and distribution
of packages.

In summary, we have developed an R package that
provides a substantial decrease in the time required to
validate and conduct hybrid detection by enabling the
parallelization of analyses using NEWHYBRIDS. Further-
more, because the time to complete analyses scales with
the size of the data set provided (number of loci and
individuals) and because running in parallel was always
faster than in series, this package will enable the explo-
ration of hybrid class assignment power and the utiliza-
tion of larger data sets than previously feasible with
NEWHYBRIDS. This should allow researchers conducting
hybrid detection to generate more accurate posterior
probability thresholds for identifying individual hybrid
categories by examining the accuracy with which NEWHY-
BRIDS correctly identiﬁes the hybrid class of known indi-
viduals in replicated analyses of multiple simulated data
sets. Furthermore, constructing and testing multiple sim-
ulated data sets is especially important when attempting
to eliminate high-grading bias through the use of simula-
tion and training data sets (Anderson 2010), when sam-
ple sizes are small and thus gene frequencies more prone
to sampling-induced alteration, and when the genetic
differentiation between populations is low (Vaha &
Primmer 2006). Similarly, parallelnewhybrid will also

Table 2 Computational time required to analyse eight simulated data sets each with 1200 individuals genotyped at 240 loci. The analy-
sis was repeated using different operating system and CPU architectures. CPU cores refer to the number of cores that the analysis could
access simultaneously (i.e. number of parallel executions of NEWHYBRIDS). Fold improvement is calculated relative to the time taken to
conduct the analysis using a single core, which itself is analogous to running the analysis in series

MacBook Pro†

Samsung Windows 10‡

Dell Precision Tower Ubuntu§

CPU cores

Elapsed
time (min)

Fold
improvement

Elapsed
time (min)

Fold
improvement

Elapsed
time (min)

Fold
improvement

1
2
3
4
5
6
7
8

41.61
20.56
15.39
11.90
12.49
12.87
13.75
10.13

NA
2.02
2.72
3.50
3.33
3.23
3.03
4.10

72.20
36.84
32.32
30.65
32.22
28.56
29.72
22.47

NA
1.96
2.23
2.35
2.24
2.52
2.43
3.21

73.31
38.12
30.91
19.03
19.30
18.82
18.43
9.95

NA
2.00
2.47
4.02
3.95
4.05
4.14
7.67

†MacBook Pro, OS X 10.11, 2.3 GHz Intel Core i7 with 16 GB RAM.
‡Samsung, Windows 10, 2.3 GHz Intel Core i7 with 12 GB RAM.
§Dell Precision Tower 7190, Ubuntu version 14.04, 2X 2.3 GHz Intel Xeon with 32 GB RAM.

© 2016 John Wiley & Sons Ltd

P A R A L L E L I Z A T I O N O F H Y B R I D D E T E C T I O N I N R 5

allow for larger data sets, both numbers of individuals
and numbers of loci per individual, to be tested than are
currently feasible, which may increase the ability for
identiﬁcation of hybridization at ﬁne-scale levels of
genetic differentiation.

Acknowledgements

The authors wish to thank Marion Sinclair-Waters and Mallory
Van Wynegaarden for their help bug checking the code. We also
thank Thierry Gosselin for encouraging us to publish this pack-
age. This work was supported by a Natural Sciences and Engi-
neering Research Council Strategic project Grant and Fisheries
and Oceans Canada funding (International Governance Strat-
egy; Program for Aquaculture Regulatory Research; Genomics
research and Development Initiative) to I.R.B.

References

Abbott R, Albach D, Ansell S et al. (2013) Hybridization and speciation.

Journal of Evolutionary Biology, 26, 229–246.

Anderson EC (2003) User’s Guide to the Program NewHybrids Version 1.1
Beta. Department of Integrative Biology, University of California,
Berkeley, Berkeley, California.

Anderson EC (2009) Statistical methods for identifying hybrids and
groups. In: Population Genetics for Animal Conservation(eds Bertorelle G,
Bruford MW, Hauff HC, Rizzoli A, Vernesi C), pp. 25–41. Cambridge
University Press, New York.

Anderson EC (2010) Assessing the power of informative subsets of loci
for population assignment: standard methods are upwardly biased.
Molecular Ecology Resources, 10, 701–710.

Anderson EC, Thompson EA (2002) A model-based method for identify-
ing species hybrids using multilocus genetic data. Genetics, 160, 1217–
1229.

Barton NH (2013) Does hybridization inﬂuence speciation? Journal of Evo-

lutionary Biology, 26, 267–269.

Barton NH, Hewitt GM (1985) Analysis of hybrid zones. Annual Review of

Ecology and Systematics, 16, 113–148.

Benson JF, Patterson BR, Mahoney PJ (2014) A protected area inﬂuences
genotype-speciﬁc survival and the structure of a Canis hybrid zone.
Ecology, 95, 254–264.

Besnier F, Glover KA (2013) ParallelStructure: a R package to distribute
parallel runs of the population genetics program STRUCTURE on mul-
ti-core computers. PLoS One, 8, e70651.

Buerkle CA (2005) Maximum-likelihood estimation of a hybrid index

based on molecular markers. Molecular Ecology Notes, 5, 684–687.

R Development Core Team (2015) R: A Language and Environment for Sta-
tistical Computing. R Foundation for Statistical Computing, Vienna,
Austria.

Fitzpatrick BM, Ryan ME, Johnson JR, Corush J, Carter ET (2015)
Hybridization and the species problem in conservation. Current Zool-
ogy, 61, 206–216.

Goudet J (2005) HIERFSTAT, a package for R to compute and test hierar-

chical F-statistics. Molecular Ecology Notes, 5, 184–186.

Hilbish TJ, Lima FP, Brannock PM et al. (2012) Change and stasis in mar-
ine hybrid zones in response to climate warming. Journal of Biogeogra-
phy, 39, 676–687.

Hubisz MJ, Falush D, Stephens M, Pritchard JK (2009) Inferring weak
population structure with the assistance of sample group information.
Molecular Ecology Resources, 9, 1322–1332.

Jombart T, Ahmed I (2011) adegenet 1.3-1: new tools for the analysis of

genome-wide SNP data. Bioinformatics, 27, 3070–3071.

Kidd AG, Bowman J, Lesbarreres D, Schulte-Hostedde AI

(2009)
Hybridization between escaped domestic and wild American mink
(Neovison vison). Molecular Ecology, 18, 1175–1186.

Meirmans PG, Van Tienderen PH (2004) GENOTYPE and GENODIVE:
two programs for the analysis of genetic diversity of asexual organ-
isms. Molecular Ecology Notes, 4, 792–794.

Paradis E (2010) pegas: an R package for population genetics with an

integrated–modular approach. Bioinformatics, 26, 419–420.

Payseur BA, Rieseberg LH (2016) A genomic perspective on hybridiza-

tion and speciation. Molecular Ecology, 25, 2337–2360.

RStudio Team (2015) RStudio: Integrated Development for R. RStudio, Inc.,

Boston, Massachusetts.

Todesco M, Pascual MA, Owens GL et al. (2016) Hybridization and

extinction. Evolutionary Applications, 9, 892–908.

Vaha JP, Primmer CR (2006) Efﬁciency of model-based Bayesian methods
for detecting hybrid individuals under different hybridization scenar-
ios and with different numbers of loci. Molecular Ecology, 15, 63–72.

Warschefsky E, Penmetsa RV, Cook DR, von Wettberg EJB (2014) Back to
the wilds: tapping evolutionary adaptations for resilient crops through
systematic hybridization with crop wild relatives. American Journal of
Botany, 101, 1791–1800.

Warwick SI, Simard MJ, Legere A et al. (2003) Hybridization between
transgenic Brassica napus L. and its wild relatives: Brassica rapa L.,
Raphanus raphanistrum L., Sinapis arvensis L., and Erucastrum gallicum
(Willd.) OE Schulz. Theoretical and Applied Genetics, 107, 528–539.

Wilson GA, Rannala B (2003) Bayesian inference of recent migration rates

using multilocus genotypes. Genetics, 163, 1177–1191.

B.F.W. wrote the manuscript and the package code and
developed the supporting documentation and example
data ﬁles hosted on GitHub. R.R.E.S., N.F.W., E.C.A. and
I.R.B. all contributed to the initial concept, development
of the code and associated documentation, as well as
assisting in the writing of the manuscript.

Data accessibility

The package, user manual, README and example data set
are all available online from https://github.com/
bwringe/parallelnewhybrid.

© 2016 John Wiley & Sons Ltd

View publication stats
View publication stats

